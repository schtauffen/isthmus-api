service: isthmus-api

frameworkVersion: "=1.25.0"

plugins:
  - serverless-dynamodb-local
  - serverless-offline #serverless-offline must be last in this list

custom:
  entry: lib/index.handler
  userTableName: 'users-table-${self:provider.stage}'
  dynamodb:
    start:
      migrate: true

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn"] }
  environment:
    USERS_TABLE: ${self:custom.userTableName}

functions:
  app:
    handler: ${self:custom.entry}
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  getUser:
    handler: ${self:custom.entry}
    events:
      - http: 'GET /users/{poxy+}'
  createUser:
    handler: ${self:custom.entry}
    events:
      - http: 'POST /users'

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.userTableName}
